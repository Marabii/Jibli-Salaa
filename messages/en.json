{
  "LocaleSwitcher": {
    "ar": "Arabic",
    "en": "English",
    "fr": "French",
    "label": "Language"
  },
  "ContactPage": {
    "noContact": "No Contacts Available",
    "noContactsMessage": "You currently have no contacts. Start by adding a new contact to manage your orders effectively.",
    "contactsHeader": "Your Contacts",
    "speakTo": "Speak to",
    "OrderDetails": {
      "product": "Product",
      "price": "Price",
      "quantity": "Quantity",
      "deliveryFee": "Delivery Fee",
      "unableToLoad": "Unable to load order details.",
      "noOrderDetails": "No order details available."
    }
  },
  "Header": {
    "brand": "Jeebware",
    "travelerOrders": "Orders",
    "trips": "Trips",
    "planTrip": "Plan Trip",
    "buyerOrder": "Order",
    "buyerOrders": "Orders",
    "contact": "Contact",
    "login": "Log In",
    "checkBalance": "Check Balance",
    "logout": "Logout",
    "infoStripe": "Taking you to Stripe page, Please wait..",
    "errorBalance": "Can't check balance, contact support",
    "profileAlt": "Profile",
    "Notifications": {
      "header": "Notifications",
      "close": "Close",
      "noNotifications": "No notifications",
      "markAsRead": "Mark as read",
      "negotiatePage": "Negotiate",
      "message": "You have received a new message from {senderName}",
      "orderAccepted": "Your order {productName} was accepted by {travelerName}.",
      "orderFinalized": "Your order {productName} was finalized.",
      "negotiationRejected": "Negotiation about {productName} was rejected.",
      "negotiationPending": "Negotiation pending, please review negotiation details of {productName}.",
      "itemPaid": "The buyer {buyerName} has paid for the product: {productName}"
    }
  },
  "HomePage": {
    "HeroSection": {
      "heroHeading": "Connect with Travelers, Get Products Delivered",
      "heroParagraph": "Jeebware is a platform that connects buyers with travelers for seamless delivery of products, both locally and internationally.",
      "heroButton": "Learn How It Works",
      "heroImageAlt": "Hero Image"
    },
    "DashboardPage": {
      "dashboardTitle": "Your Dashboard",
      "pendingOrdersMessage": "You have pending orders.",
      "scheduledTripsMessage": "You have scheduled trips.",
      "ordersHeading": "Your Orders ({count})",
      "tripsHeading": "Your Trips ({count})",
      "DashboardCard": {
        "tripTo": "Trip to",
        "departure": "Departure",
        "arrival": "Arrival"
      },
      "ConfirmDelivery": {
        "instruction": "Please confirm delivery once you receive your product.",
        "confirmDelivery": "Confirm Delivery",
        "confirming": "Confirming...",
        "error": "Something went wrong, couldn't confirm order"
      }
    },
    "OrdersMap": {
      "title": "Have a look at all current online orders",
      "CurrencySelector": {
        "selectCurrency": "What currency do you want to see the order prices in?"
      },
      "OrderList": {
        "ordersTitle": "{count, plural, one {# Order} other {# Orders}}",
        "ordersCount": "{count, plural, one {# Order} other {# Orders}}",
        "youllGet": "You'll get:",
        "price": "Price:"
      }
    },
    "AboutSection": {
      "sectionHeading": "Why Use Jeebware?",
      "features": {
        "accessGlobalProducts": {
          "title": "Access Global Products",
          "description": "Get items from around the world that are not available or are too expensive in your country."
        },
        "earnWhileTraveling": {
          "title": "Earn While Traveling",
          "description": "Travelers can make extra money by delivering items along their route."
        },
        "sustainableDeliveries": {
          "title": "Sustainable Deliveries",
          "description": "Reduce carbon emissions by utilizing existing travel routes for deliveries."
        }
      }
    },
    "HowItWorksSection": {
      "sectionHeading": "How It Works",
      "steps": {
        "postRequest": {
          "title": "Post a Request",
          "description": "Buyers post requests for products they want, specifying details and offering a delivery fee."
        },
        "travelerAccepts": {
          "title": "Traveler Accepts the Order",
          "description": "Travelers browse requests and accept orders that fit their itinerary."
        },
        "deliveryConfirmation": {
          "title": "Delivery and Confirmation",
          "description": "The traveler delivers the item, and the buyer confirms receipt. Payments are securely processed."
        }
      },
      "getStarted": "Get Started"
    },
    "CallToActionSection": {
      "sectionHeading": "Ready to Join the Community?",
      "sectionParagraph": "Sign up today to start ordering products or earning money as a traveler.",
      "buyerButton": "Sign Up as Buyer",
      "travelerButton": "Sign Up as Traveler"
    }
  },
  "LoginPage": {
    "Layout": {
      "title": "Login",
      "subheading": "Please fill your email and password to login"
    },
    "Page": {
      "emailLabel": "Email Address",
      "emailPlaceholder": "Type Your Email",
      "emailError": "Invalid email address",
      "passwordLabel": "Password",
      "passwordPlaceholder": "Enter Your Password",
      "passwordError": "Password must be at least 8 characters long, and include one uppercase letter, one lowercase letter, and one digit.",
      "signInWithGoogle": "Sign In With Google",
      "noAccount": "Don't Have An Account?",
      "register": "Register"
    },
    "Metadata": {
      "title": "Login - Jeebware",
      "description": "Login page for the website Jeebware"
    },
    "Form": {
      "defaultText": "Log In",
      "pendingText": "Logging in..."
    },
    "Validation": {
      "emailMissing": "Email is missing",
      "emailInvalid": "Invalid email address",
      "passwordMissing": "Password is missing",
      "passwordInvalid": "Password must be at least 8 characters long, and include one uppercase letter, one lowercase letter, and one digit.",
      "unknownError": "An unknown error occurred"
    }
  },
  "RegisterPage": {
    "Layout": {
      "title": "Create an account"
    },
    "Page": {
      "introText": "Create an account and start using Jeebware",
      "nameLabel": "Name",
      "namePlaceholder": "Type your name",
      "nameError": "Name can only contain letters and spaces",
      "emailLabel": "Email Address",
      "emailPlaceholder": "Type Your Email",
      "emailError": "Invalid email address",
      "passwordLabel": "Password",
      "passwordPlaceholder": "Enter Your Password",
      "passwordError": "Password must be at least 8 characters long, include one uppercase letter, one lowercase letter, and one digit.",
      "alreadyHaveAccount": "Already Have An Account?",
      "signIn": "Sign-In"
    },
    "CountrySelector": {
      "label": "What country do you live in?",
      "placeholder": "Select the country you live in"
    },
    "PhoneNumberInput": {
      "label": "Phone Number",
      "placeholder": "Enter your phone number"
    },
    "RoleAndCurrencySelectors": {
      "roleLabel": "How do you plan to use Jeebware?",
      "buyerOption": "Buy Products",
      "travelerOption": "Be a Traveler",
      "travelerSub": "Earn extra income",
      "currencyLabel": "What currency does your bank support?",
      "currencyPlaceholder": "Select the currency your bank uses"
    },
    "SubmitButton": {
      "defaultText": "Register",
      "pendingText": "Processing request...",
      "googleButton": "Sign Up With Google"
    },
    "error": {
      "nameMissing": "Name is missing",
      "nameInvalid": "Name contains invalid characters",
      "emailMissing": "Email is missing",
      "emailInvalid": "Invalid email address",
      "passwordMissing": "Password is missing",
      "passwordInvalid": "Password must be at least 8 characters long, and include one uppercase letter, one lowercase letter, and one digit.",
      "phoneMissing": "Phone number is missing",
      "phoneInvalid": "Phone number must be in E.164 format (e.g. +1234567890)",
      "bankCurrencyMissing": "Your bank's currency is required",
      "countryMissing": "Your country of residence is required",
      "roleMissing": "Please select how you plan on using Jeebware"
    }
  },
  "TravelerTrip": {
    "saveTrip": {
      "MapInputFrom": {
        "heading": "Set your initial location"
      },
      "MapInputTo": {
        "heading": "Set your destination"
      },
      "TripDates": {
        "departureHeading": "Departure Date and Time",
        "departurePlaceholder": "Select departure date and time",
        "arrivalHeading": "Arrival Date and Time",
        "arrivalPlaceholder": "Select arrival date and time"
      },
      "SubmitButton": {
        "defaultText": "Save Trip",
        "pendingText": "Saving trip..."
      },
      "Validation": {
        "fromAddressRequired": "From address is required.",
        "fromLatitudeRequired": "From latitude is required.",
        "fromLongitudeRequired": "From longitude is required.",
        "toAddressRequired": "To address is required.",
        "toLatitudeRequired": "To latitude is required.",
        "toLongitudeRequired": "To longitude is required.",
        "departureRequired": "Departure date is required.",
        "departureInvalid": "Departure date is invalid.",
        "departureFuture": "Departure date must be in the future.",
        "arrivalRequired": "Arrival date is required.",
        "arrivalInvalid": "Arrival date is invalid.",
        "arrivalFuture": "Arrival date must be in the future.",
        "departureBeforeArrival": "Departure date must be before arrival date.",
        "arrivalAfterDeparture": "Arrival date must be after departure date."
      }
    },
    "ManageOrders": {
      "accessDenied": "Access Denied: You are not authorized to view this page.",
      "noDeliveredOrders": "No Delivered Orders Yet",
      "noDeliveredOrdersDescription": "It seems you haven't delivered any products so far. To get started, schedule a trip, connect with buyers, and accept an order to deliver. Once you deliver the product, it will appear here for you to claim your payment.",
      "selectTrip": "Select a Trip",
      "manageYourOrders": "Manage Your Orders",
      "orderStatus": {
        "pending": "Order placed, no traveler has accepted it yet",
        "orderAccepted": "You have accepted the order",
        "negotiationPending": "Negotiation in progress.",
        "orderFinalized": "Order details finalized.",
        "priceFrozen": "Payment authorized but not yet captured.",
        "itemBought": "Item purchased by the traveler.",
        "enRoute": "Item is on its way.",
        "delivered": "Item delivered successfully.",
        "fundsTransferred": "Funds have been transferred.",
        "unknown": "Status unknown."
      },
      "productImageAlt": "Product",
      "currency": "euros",
      "negotiate": "Negotiate"
    },
    "SelectTrip": {
      "pageTitle": "Select a Trip",
      "tripCount": "You are scheduled for {count, plural, one {# trip} other {# trips}}",
      "from": "From",
      "to": "to",
      "selectTripButton": "Select this trip",
      "noTrips": "You haven't registered any trips yet.",
      "registerTrip": "Register a trip",
      "accessDenied": "You are not a traveler. Please sign in as a traveler to access this page.",
      "fetchUserError": "Failed to fetch user information.",
      "fetchTripsError": "Failed to fetch trips."
    },
    "AcceptOrders": {
      "error": {
        "missingLatLng": "Latitude and Longitude must be provided in the query parameters.",
        "fetchOrdersByCountries": "Error fetching orders by countries:",
        "handleSearch": "Error during search.",
        "handleReset": "Error during reset."
      },
      "pageTitle": "Traveler View",
      "filter": {
        "countriesLabel": "Countries",
        "countriesPlaceholder": "Select Countries",
        "searchButton": "Search",
        "searchingText": "Searching...",
        "resetButton": "Reset"
      },
      "ordersInfo": {
        "ordersFound": "{count, plural, one {# Order Found} other {# Orders Found}}",
        "noOrdersFound": "We're sorry, but no orders were found matching your criteria."
      },
      "selectTrip": {
        "routeDataToggleHide": "Hide Route Data",
        "routeDataToggleShow": "Show Route Data"
      },
      "OrderList": {
        "ordersTitle": "{count, plural, one {# Order} other {# Orders}}",
        "ordersCount": "{count, plural, one {# Order} other {# Orders}}",
        "youllGet": "You'll get:",
        "price": "Price:",
        "viewDetails": "talk to buyer"
      },
      "Directions": {
        "routeLabel": "Route: {summary}",
        "from": "From",
        "to": "to",
        "distance": "Distance:",
        "duration": "Duration:",
        "option": "Option {num}: {summary}"
      }
    }
  },
  "Negotiate": {
    "Page": {
      "missingParameters": "Missing required parameters: recipientId or orderId",
      "failedFetchUser": "Failed to fetch user information. Please try again later.",
      "failedFetchOrder": "Failed to fetch order details. Please try again later.",
      "failedFetchChat": "Failed to fetch chat history. Please try again later.",
      "chatConnectionError": "Critical error connecting to chat. Please wait; page will refresh.",
      "stripeRedirect": "Taking you to Stripe page"
    },
    "ValidateNegotiations": {
      "confirmNegotiatedDetails": "Confirm Negotiated Details",
      "productValue": "Product Value:",
      "deliveryFee": "Delivery Fee:",
      "successAccepted": "Negotiation accepted successfully.",
      "successRejected": "Negotiation rejected successfully.",
      "errorUserInfo": "Something went wrong while fetching user information.",
      "errorOrderInfo": "Something went wrong while fetching order information.",
      "errorAccept": "Error accepting negotiation.",
      "errorReject": "Error rejecting negotiation.",
      "accept": "Accept",
      "requestRenegotiation": "Request Renegotiation",
      "processing": "Processing..."
    },
    "Components": {
      "OrderDetails": {
        "orderDetails": "Order Details",
        "product": "Product:",
        "description": "Description:",
        "quantity": "Quantity:",
        "productPrice": "Product Price:",
        "deliveryFee": "Delivery Fee:",
        "deliveryInstructions": "Delivery Instructions:",
        "orderPlaced": "Order Placed:",
        "productURL": "Product URL:",
        "viewProduct": "View Product",
        "pickupPlace": "Pickup Place:",
        "orderAccepted": "Order Accepted",
        "images": "Images:"
      },
      "NegotiationForm": {
        "finalizeNegotiation": "Finalize Negotiation",
        "finalizingNegotiation": "Finalizing negotiation...",
        "error": {
          "productValue": "Product value cannot be less than: {minPrice}",
          "deliveryFee": "Delivery fee cannot be less than: {minFee}"
        }
      },
      "NegotiationControls": {
        "negotiationInProgress": "Negotiation in Progress",
        "negotiationDetailsPrompt": {
          "start": "Click",
          "end": "to review negotiation details and either accept or reject them"
        },
        "here": "here",
        "orderFinalized": "Order Finalized!",
        "orderFinalizedInfo": "The order has been finalized. Sit tight while the buyer processes the payment.",
        "buyerPaid": "The buyer has paid for the product!",
        "deliverProduct": "You can now commence your trip and deliver the product.",
        "pendingAcceptance": "Pending Acceptance",
        "notAccepted": "You have NOT ACCEPTED the order yet.",
        "acceptOrder": "Accept Order",
        "negotiateAndFinalize": "Negotiate & Finalize",
        "proceedToPayment": "Proceed to Payment",
        "finalizeOrder": "Finalize the Order",
        "finalizeOrderPrompt": "Confirm the product's cost and delivery fee with the traveler, then finalize the order.",
        "awaitingTravelerConfirmation": "Awaiting Traveler Confirmation",
        "travelerReviewing": "The traveler is reviewing the negotiation details.",
        "pendingTravelerAcceptance": "Pending Traveler Acceptance",
        "travelerAcceptanceNeeded": "The traveler must accept the order before negotiation can begin.",
        "fundsTransferred": "Funds were transferred to the traveler",
        "signupTraveler": "Sign up as a traveler to make some money."
      },
      "MessageInput": {
        "typeMessage": "Type a message...",
        "sendMessage": "Send Message"
      },
      "CriticalErrorBanner": {
        "criticalErrorMessage": "Critical error: {error} - Refreshing page in {seconds} seconds..."
      },
      "ChatSection": {
        "chatWith": "Chat with: {recipientName}"
      }
    }
  },
  "FormErrorHandler": {
    "errorHeader": "There were some errors with your submission:"
  },
  "BuyerPage": {
    "SaveOrder": {
      "ValidateForm": {
        "error": {
          "invalidURL": "Please enter a valid URL.",
          "estimatedValue": "Estimated value must be more than {min}.",
          "productName": "Product name is required, 3-100 characters, and may contain letters, numbers, spaces, and . , ' -",
          "description": "Description is required and must be 10-10,000 characters long, allowing any type of character.",
          "quantity": "Quantity must be at least 1.",
          "dimension": {
            "length": "Length must be a positive number.",
            "width": "Width must be a positive number.",
            "height": "Height must be a positive number."
          },
          "deliveryInstructions": "Delivery instructions must be 10-10,000 characters long.",
          "initialDeliveryFee": "Delivery fee must be larger than {min}.",
          "preferredPickupPlace": "Please enter or re-enter your preferred pickup place.",
          "selectedFiles": "Please select valid images before submitting."
        }
      },
      "Form": {
        "FormImagesInput": {
          "uploadHeader": "Upload images of the product you're ordering",
          "uploadInstructions": "Drag and drop images here, or click to select files"
        },
        "FormMapInput": {
          "pickupPrompt": "Choose your preferred pickup place"
        },
        "FormSubmissionButton": {
          "saveOrder": "Save Order",
          "savingOrder": "Saving order"
        },
        "FormUsualInputs": {
          "header": "Please fill out your order details",
          "productURL": {
            "label": "Product URL (Optional)",
            "error": "Please enter a valid URL."
          },
          "estimatedValue": {
            "label": "Estimated Value in {code} ({symbol}):",
            "error": "Please enter a number higher than 10."
          },
          "productName": {
            "label": "Product Name",
            "error": "Product name is required, 3-100 characters, and may contain letters, numbers, spaces, and . , ' -"
          },
          "description": {
            "label": "Description",
            "error": "Description is required, 10-1000 characters"
          },
          "quantity": {
            "label": "How many items are you willing to buy?",
            "error": "Quantity must be at least 1."
          },
          "dimensions": {
            "length": {
              "label": "Length in cm (optional)",
              "error": "Length must be a positive number."
            },
            "width": {
              "label": "Width in cm (optional)",
              "error": "Width must be a positive number."
            },
            "height": {
              "label": "Height in cm (optional)",
              "error": "Height must be a positive number."
            }
          },
          "deliveryInstructions": {
            "label": "Special Instructions (optional)",
            "error": "Delivery instructions must be less than 10000 characters and may contain letters."
          },
          "initialDeliveryFee": {
            "label": "Declare how much you're willing to pay the traveler in {code} ({symbol})",
            "error": "Delivery fee must be larger than 5."
          }
        }
      }
    },
    "BuyerPay": {
      "OrderId": {
        "CollapsibleText": {
          "showLess": "Show less",
          "showMore": "Show more"
        },
        "Page": {
          "notBuyerError": "You aren't a buyer, you can't access this page",
          "orderNotFinalizedError": "The order isn't finalized yet, you can't pay for it",
          "orderDetailsHeader": "Order Details",
          "productDescriptionLabel": "Product description:",
          "quantityLabel": "Quantity",
          "valueLabel": "Value",
          "deliveryFeeLabel": "Delivery Fee",
          "deliveryInstructionsLabel": "Delivery Instructions:",
          "preferredPickupPlaceLabel": "Preferred Pickup Place:"
        },
        "PayButton": {
          "loading": "Loading",
          "processing": "Processing...",
          "pay": "PAY",
          "finalizeNegotiationBeforePay": "Finalize the negotiation terms with the traveler before paying for the product",
          "paymentSessionCreationFailed": "Payment session creation failed: {message}",
          "paymentError": "An error occurred during payment."
        }
      },
      "Error": {
        "Page": {
          "header": "Payment Cancelled",
          "message": "It looks like you cancelled your payment. No worries — if this was unintentional, feel free to try again or contact our support team.",
          "returnHome": "Return Home"
        }
      },
      "Success": {
        "Page": {
          "header": "Success!",
          "message": "Your operation was completed successfully.",
          "goHome": "Go Home"
        }
      }
    },
    "ManageOrders": {
      "ConfirmDelivery": {
        "instruction": "Please confirm delivery once you receive your product.",
        "confirmDelivery": "Confirm Delivery",
        "confirming": "Confirming...",
        "confirmSuccess": "Thank you for confirming receipt of your product, thank you for using our services.",
        "errorAlert": "Something went wrong, couldn't confirm order."
      },
      "Page": {
        "manageYourOrders": "Manage Your Orders",
        "quantityLabel": "Quantity:",
        "valueLabel": "Value:",
        "deliveryFeeLabel": "Delivery Fee:",
        "statusLabel": "Status:",
        "placedAtLabel": "Placed At:",
        "proceedToPayment": "Proceed to Payment"
      }
    }
  }
}
